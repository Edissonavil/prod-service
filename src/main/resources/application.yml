spring:
  application:
    name: aec-prod

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USER}
    password: ${MAIL_PASS}
    protocol: smtp
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.ssl.enable: false
      mail.smtp.ssl.trust: ${MAIL_HOST}
    default-encoding: UTF-8
    
  docker:
    compose:
      enabled: false
  cloud:
    compatibility-verifier:
      enabled: false
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB

  datasource:
    url: jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
    username: ${PGUSER}
    password: ${PGPASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  admin:
    email: ${ADMIN_EMAIL}
    
server:
  port: ${PORT:8080}

jwt:
  secret: ${JWT_SECRET}
  accessMs: ${JWT_ACCESS_MS:3600000}
  refreshMs: ${JWT_REFRESH_MS:86400000}

file-service:
  base-url: ${FILE_SERVICE_BASE_URL}

gateway:
  public-base-url: ${GATEWAY_PUBLIC_BASE_URL}

users:
  service:
    url: ${USER_SERVICE_URL}

file:
  upload-dir: ${UPLOAD_DIR:/app/uploads}

http:
  client:
    connect-timeout-ms: ${HTTP_CONNECT_TIMEOUT_MS:5000}
    read-timeout-ms: ${HTTP_READ_TIMEOUT_MS:5000}
    
logging:
  level:
    root: INFO
    org.springframework: WARN
